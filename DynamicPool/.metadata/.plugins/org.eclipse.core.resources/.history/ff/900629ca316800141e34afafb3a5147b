package vn.edu.hust.student.dynamicpool.gameobject;

import vn.edu.hust.student.dynamicpool.Assets;
import vn.edu.hust.student.dynamicpool.bll.IFish;

import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

public class FishOneUI extends FishUI {
	private Animation horizontalAnimation;
	private Animation verticalAnimation;

	public FishOneUI(IFish fish) {
		super(fish);
		init();
	}

	@Override
	public void init() {
		Assets assets = Assets.instance;
		Assets.AssetFishAnimated fishAsset = assets.getFish1Asset();
		horizontalAnimation = fishAsset.getHorizontalAnimation();
		verticalAnimation = fishAsset.getVerticalAnimation();
	}

	@Override
	public void render(SpriteBatch batch) {
		Animation animation = getAnimation();
		TextureRegion frame = animation.getKeyFrame(getTime(), true);
		batch.draw(frame, getX(), getY(), 0, 0, frame.getRegionWidth(), frame.getRegionHeight(), getScale(), getScale(), getRotatedAngle());
	}

	private Animation getAnimation() {
		EDirection direction = getDirection();
		if (direction == EDirection.LEFT || direction == EDirection.RIGHT)
			return horizontalAnimation;
		return verticalAnimation;
	}

	private int getRotatedAngle() {
		int angle = (int) getAngle() / 90;
		return angle;
	}
}
