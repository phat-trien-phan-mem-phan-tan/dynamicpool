package vn.edu.hust.student.dynamicpool.presentation.screen;

import vn.edu.hust.student.dynamicpool.presentation.WorldRenderer;
import vn.edu.hust.student.dynamicpool.presentation.assets.AssetMainMenu;
import vn.edu.hust.student.dynamicpool.presentation.assets.Assets;
import vn.edu.hust.student.dynamicpool.utils.AppConst;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.ImageButton;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
import com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable;

public class MainMenuScreen implements Screen {
	private WorldRenderer worldRenderer = null;
	private AssetMainMenu mainMenuAssets = null;
	private Stage stage = new Stage();
	private Table table = new Table();
	private ImageButton createHostButton = null;
	private ImageButton joinHostButton = null;
	
	public MainMenuScreen(WorldRenderer worldRenderer) {
		this.worldRenderer = worldRenderer;
		this.bath = worldRenderer.getBatch();
	}

	@Override
	public void render(float delta) {
		worldRenderer.beginRender();
		stage.act();
		stage.draw();
		worldRenderer.endRender();
	}
	
	@Override
	public void resize(int width, int height) {
		worldRenderer.resize(width, height);
	}

	@Override
	public void show() {
		mainMenuAssets = Assets.instance.mainMenu;
		initButtons();
	}

	private void initButtons() {
		TextureRegionDrawable creatHostImageUp = mainMenuAssets.getCreateHostDrawable();
		createHostButton = new ImageButton(creatHostImageUp);
		table.add(createHostButton).row();
		TextureRegionDrawable joinHostImageUp = mainMenuAssets.getJoinHostDrawable();
		joinHostButton = new ImageButton(joinHostImageUp);
		joinHostButton.addListener(new ClickListener() {
			@Override
			public void clicked(InputEvent event, float x, float y) {
				
			}
		});
		table.add(joinHostButton).row();
		table.setBackground(new TextureRegionDrawable(new TextureRegion(mainMenuAssets.getMainMenuBackgroundTexture())));
		table.setFillParent(true);
		stage.addActor(table);
		
		Gdx.input.setInputProcessor(stage);
	}

	@Override
	public void hide() {

	}

	@Override
	public void pause() {

	}

	@Override
	public void resume() {

	}

	@Override
	public void dispose() {
		stage.dispose();
	}

}
