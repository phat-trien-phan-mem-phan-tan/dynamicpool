package vn.edu.hust.student.dynamicpool;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.assets.AssetDescriptor;
import com.badlogic.gdx.assets.AssetErrorListener;
import com.badlogic.gdx.assets.AssetManager;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.utils.Disposable;

public class Assets implements Disposable, AssetErrorListener {
	public static final String TAG = Assets.class.getName();
	public static final Assets instance = new Assets();
	private AssetManager assetManager;

	public AssetBackgroundPool background;

	// Singleton: Xem lai dinh nghia trong Java nhe
	private Assets() {
		background = new AssetBackgroundPool();
	}

	public void init(AssetManager assetManager) {
		this.assetManager = assetManager;
		// Thiet lap xu ly loi
		assetManager.setErrorListener(this);

		loadAssets();
		// Bat dau qua trinh load cho den khi ket thuc
		assetManager.finishLoading();

		// Lay ra du lieu - xem o Console tab nhe
		Gdx.app.debug(TAG,
				"Du lieu duoc load vao bo nho: "
						+ assetManager.getAssetNames().size);
		bindAssets();
	}

	private void bindAssets() {
		background.bind(assetManager, 0, 0, 3000, 2500);
	}

	private void loadAssets() {
		background.load(assetManager);
	}

	@Override
	public void dispose() {
		// Xoa du lieu khoi bo nho
		assetManager.dispose();
	}

	@Override
	public void error(AssetDescriptor asset, Throwable throwable) {
		// TODO Auto-generated method stub
		Gdx.app.error(TAG, "Khong the load '" + asset.fileName + "'",
				(Exception) throwable);
	}

	public class AssetBackgroundPool {
		public Texture mainBackgroundTexture;
		public TextureRegion mainBackgroundRegion;

		public AssetBackgroundPool() {
		}

		public void load(AssetManager assetManager) {
			assetManager.load(AppConst.BACKGROUND_TEXTURE, Texture.class);
		}

		public void bind(AssetManager assetManager, int x, int y, int width,
				int height) {
			mainBackgroundTexture = assetManager
					.get(AppConst.BACKGROUND_TEXTURE);
			mainBackgroundTexture.setFilter(TextureFilter.Linear,
					TextureFilter.Linear);
			mainBackgroundRegion = new TextureRegion(mainBackgroundTexture, x,
					y, width, height);
		}
	}
}