package vn.edu.hust.student.dynamicpool;

import com.badlogic.gdx.Application;
import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;

public class GameCenter extends ApplicationAdapter {
	private WorldController worldController;
	private WorldRenderer worldRenderer;
	private boolean paused;

	@Override
	public void create() {
		// float w = Gdx.graphics.getWidth();
		// float h = Gdx.graphics.getHeight();
		//
		// camera = new OrthographicCamera(1, h / w);
		// batch = new SpriteBatch();
		//
		// texture = new Texture("badlogic.jpg");
		// texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		//
		// TextureRegion region = new TextureRegion(texture, 0, 0, 512, 275);
		//
		// sprite = new Sprite(region);
		// sprite.setSize(0.9f, 0.9f * sprite.getHeight() / sprite.getWidth());
		// sprite.setOrigin(sprite.getWidth() / 2, sprite.getHeight() / 2);
		// sprite.setPosition(-sprite.getWidth() / 2, -sprite.getHeight() / 2);
		// Thiet lap log debug cho game
		Gdx.app.setLogLevel(Application.LOG_DEBUG);
		// Tao the hien cho controller và render
		worldController = new WorldController();
		worldRenderer = new WorldRenderer(worldController);
	}

	@Override
	public void render() {
		// Gdx.gl.glClearColor(1, 1, 1, 1);
		// Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		//
		// batch.setProjectionMatrix(camera.combined);
		// batch.begin();
		// // Quay tron
		// final float degressPerSecond = 10.0f;
		// rot = (rot + Gdx.graphics.getDeltaTime() * degressPerSecond) % 360;
		// sprite.setRotation(rot);
		//
		// // Lac lu
		// final float shakeAmplitudeInDegrees = 5.0f;
		// float shake = MathUtils.sin(rot) * shakeAmplitudeInDegrees;
		// sprite.setRotation(shake);
		//
		// sprite.draw(batch);
		// batch.end();
		// Thiet lap delta time - thoi gian cap nhat game
		worldController.update(Gdx.graphics.getDeltaTime());
		// Thiet lap nen man hinh hien thi - Mau xanh da troi chuan RGBA
		// Viet bang ky hieu thap luc phan
		Gdx.gl.glClearColor(0x64 / 255.0f, 0x95 / 255.0f, 0xed / 255.0f,
				0xff / 255.0f);
		// Xoa va dong bo man hinh
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		// Hien thi game ra man hinh
		worldRenderer.render();
	}

	
	@Override
	public void resize(int width, int height) {
		worldRenderer.resize(width, height);
	}
	
	

	@Override
	public void pause() {
		paused = true;
	}

	@Override
	public void resume() {
		paused = false;
	}

	@Override
	public void dispose() {
		worldRenderer.dispose();
	}

}
